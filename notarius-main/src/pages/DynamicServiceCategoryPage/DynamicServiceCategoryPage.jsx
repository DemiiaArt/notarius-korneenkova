/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É—Å–ª—É–≥ –∏–∑ –∞–¥–º–∏–Ω–∫–∏
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL
 */

import { useServiceCategoryPage } from "@/hooks/useServiceCategoryPage";
import TemplatePage from "@pages/secondLevel/TemplatePage";
import { useIsPC } from "@hooks/isPC";
import Seo from "@components/Seo/Seo";
import { useSeo } from "@hooks/useSeo";
import Skeleton from "@components/Skeleton/Skeleton";

const DynamicServiceCategoryPage = () => {
  const { category, loading, error, lang } = useServiceCategoryPage();
  const isPC = useIsPC();

  if (loading) {
    return (
      <div
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          minHeight: "400px",
          fontSize: isPC ? "18px" : "16px",
        }}
      >
        –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
      </div>
    );
  }

  if (error) {
    return (
      <div
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          minHeight: "400px",
          fontSize: isPC ? "18px" : "16px",
          color: "#e74c3c",
        }}
      >
        –ü–æ–º–∏–ª–∫–∞: {error}
      </div>
    );
  }

  if (!category) {
    return (
      <div
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          minHeight: "400px",
          fontSize: isPC ? "18px" : "16px",
        }}
      >
        –ö–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
      </div>
    );
  }

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º HTML –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç content –¥–ª—è TemplatePage
  const content =
    category.description && category.description[lang]
      ? [
          {
            type: "html",
            html: category.description[lang],
          },
        ]
      : [];

  const title =
    category.label && category.label[lang] ? category.label[lang] : "–ü–æ—Å–ª—É–≥–∞";

  console.log(`üìÑ DynamicServiceCategoryPage category:`, {
    id: category?.id,
    label: category?.label,
    seo_title: category?.seo_title,
    seo_description: category?.seo_description,
    lang,
  });

  // SEO –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  const seoProps = useSeo({
    navId: category?.id,
    title: category?.seo_title?.[lang] || title,
    description:
      category?.seo_description?.[lang] || "–ù–æ—Ç–∞—Ä—ñ–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ —É –î–Ω—ñ–ø—Ä—ñ",
  });

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º skeleton –ø–æ–∫–∞ navTree –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü, –∑–∞–≤–∏—Å—è—â–∏—Ö –æ—Ç navTree)
  if (seoProps.shouldShowSkeleton) {
    return <Skeleton message="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞..." />;
  }

  return (
    <>
      <Seo {...seoProps} />
      <TemplatePage
        title={title}
        content={content}
        heroImgClass="service-category-hero"
      />
    </>
  );
};

export default DynamicServiceCategoryPage;
