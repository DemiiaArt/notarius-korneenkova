import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination } from "swiper/modules";
import { Link } from "react-router-dom";
import { useLang } from "@nav/use-lang";
import { MEDIA_BASE_URL } from "@/config/api";
import {
  buildFullPathForId,
  findPathStackById,
  getLabel,
  findNodeById,
} from "@nav/nav-utils";
import { useHybridNav } from "@contexts/HybridNavContext";
import { useIsPC } from "@hooks/isPC";
import { useTranslation } from "@hooks/useTranslation";
import arrowRight from "@media/comments-carousel/arrow-right.svg";
import "./GroupServicesCarousel.scss";

// Import Swiper styles
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";

const GroupServicesCarousel = ({
  parentId, // ID –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–º—É –¥–µ—Ä–µ–≤—ñ
  title = "–í–ò–î–ò –ù–û–¢–ê–†–Ü–ê–õ–¨–ù–ò–• –ü–û–°–õ–£–ì", // –ó–∞–≥–æ–ª–æ–≤–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å—Å—è
  showTitle = true,
  className = "",
  kind = "page", // –¢–∏–ø –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –ø–æ–∫–∞–∑—É (—Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏ page, –∏ group)
}) => {
  const { currentLang } = useLang();
  const isPC = useIsPC();
  const { navTree, loading, error } = useHybridNav();
  const { t } = useTranslation("components.GroupServicesCarousel");

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
  const getTranslatedTitle = (originalTitle) => {
    const titles = t("titles");
    return titles && titles[originalTitle]
      ? titles[originalTitle]
      : originalTitle;
  };

  // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —è–∫—â–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
  if (loading) {
    return (
      <div className={`group-services-carousel ${className}`}>
        <div className="container">
          <div style={{ textAlign: "center", padding: "20px" }}>
            {t("loading")}
          </div>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É —è–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
  if (error || !navTree) {
    return null;
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ nav-utils –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–µ—Ç–µ–π
  const findChildren = (node, targetId) => {
    const targetNode = findNodeById(node, targetId);
    return targetNode ? targetNode.children || [] : [];
  };

  const children = findChildren(navTree, parentId) || [];

  console.log("üîç GroupServicesCarousel - parentId:", parentId);
  console.log("üîç GroupServicesCarousel - children:", children);
  console.log(
    "üîç GroupServicesCarousel - children kinds:",
    children.map((c) => ({
      id: c.id,
      kind: c.kind,
      label: c.label?.[currentLang],
    }))
  );

  // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–∞ —Ç–∏–ø–æ–º
  // –ü–æ–∫–∞–∑—É—î–º–æ —è–∫ page, —Ç–∞–∫ —ñ group –µ–ª–µ–º–µ–Ω—Ç–∏
  const visibleChildren = children.filter(
    (child) =>
      child &&
      (child.kind === "page" || child.kind === "group") &&
      child.showInMenu !== false &&
      child.label && // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —î –ª–µ–π–±–ª
      child.label[currentLang]
  );

  console.log("üîç GroupServicesCarousel - visibleChildren:", visibleChildren);
  console.log(
    "üîç GroupServicesCarousel - visibleChildren count:",
    visibleChildren.length
  );

  // –û—Ç—Ä–∏–º—É—î–º–æ –ª–µ–π–±–ª –¥–ª—è –º–æ–≤–∏
  const getLabel = (node, lang) => {
    return (node?.label && node.label[lang]) || "";
  };

  // –û—Ç—Ä–∏–º—É—î–º–æ URL –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç–∞
  const getUrl = (nodeId) => {
    return buildFullPathForId(navTree, nodeId, currentLang) || "#";
  };

  // –û—Ç—Ä–∏–º—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø–æ—Å–ª—É–≥–∏ –∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
  const getServiceImage = (service) => {
    // –Ø–∫—â–æ —î card_image –≤ –æ–±'—î–∫—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
    if (service?.card_image) {
      return service.card_image.startsWith('/media/') 
        ? service.card_image 
        : `${MEDIA_BASE_URL}${service.card_image}`;
    }
    // Fallback - –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    return "/src/assets/media/services-carousel/ServicesGallery_notary.png";
  };

  if (visibleChildren.length === 0) {
    return null;
  }

  return (
    <div className={`group-services-carousel ${className}`}>
      <div className="container">
        {showTitle && (
          <h2
            className={`group-services-carousel-title ${isPC ? "fs-p--32px" : "fs-p--24px"} fw-semi-bold uppercase c3`}
          >
            {getTranslatedTitle(title)}
          </h2>
        )}
      </div>
      <div className="group-services-carousel-wrapper">
        <Swiper
          modules={[Navigation, Pagination]}
          spaceBetween={10}
          slidesPerView={isPC ? 4 : 2}
          navigation={{
            nextEl: ".group-services-carousel-next",
            prevEl: ".group-services-carousel-prev",
          }}
          pagination={{
            clickable: true,
            el: ".group-services-carousel-pagination",
          }}
          className="group-services-carousel-swiper"
        >
          {visibleChildren.map((service) => (
            <SwiperSlide key={service.id}>
              <Link
                to={getUrl(service.id)}
                className="group-services-carousel-slide"
              >
                <div className="group-services-carousel-image">
                  <img
                    src={getServiceImage(service)}
                    alt={getLabel(service, currentLang)}
                    loading="lazy"
                  />
                </div>
                <div className="group-services-carousel-content">
                  <h3
                    className={`group-services-carousel-label ${isPC ? "fs-p--24px" : "fs-p--14px"} fw-semi-bold c3 uppercase`}
                  >
                    {getLabel(service, currentLang)}
                  </h3>
                </div>
              </Link>
            </SwiperSlide>
          ))}
        </Swiper>

        {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ —Å—Ç—Ä—ñ–ª–∫–∏ */}
        <button className="group-services-carousel-prev">
          <img src={arrowRight} alt="arrow-right" />
        </button>
        <button className="group-services-carousel-next">
          <img src={arrowRight} alt="arrow-right" />
        </button>
      </div>
    </div>
  );
};

export default GroupServicesCarousel;
