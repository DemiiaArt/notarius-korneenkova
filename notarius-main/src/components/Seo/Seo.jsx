import { Helmet } from "react-helmet-async";
import { SITE_BASE_URL } from "@/config/api";

// –î–æ–ø–æ–º—ñ–∂–Ω–∞: –±—É–¥—É—î–º–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–π URL –∞–∫—É—Ä–∞—Ç–Ω–æ
function joinUrl(base, path) {
  if (!base) return path || "";
  const b = base.endsWith("/") ? base.slice(0, -1) : base;
  if (!path) return b;
  const p = path.startsWith("/") ? path : `/${path}`;
  return `${b}${p}`;
}

/**
 * buildCanonical:
 * - –î–ª—è —Ä—ñ–≤–Ω—ñ–≤ 3‚Äì4: –±–µ—Ä–µ–º–æ –∑ navTree.canonical_url[lang], —è–∫—â–æ —î
 * - –î–ª—è —Ñ—Ä–æ–Ω—Ç–æ–≤–∏—Ö 1‚Äì2: –±—É–¥—É—î–º–æ –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç—É (routePath) –Ω–∞ –±–∞–∑—ñ SITE_BASE_URL
 * - –Ø–∫—â–æ —É canonical –∑ navTree –ø—Ä–æ—Ç–æ–∫–æ–ª/—Ö–æ—Å—Ç "–ª–æ–∫–∞–ª—å–Ω—ñ" ‚Äî –∑–∞–º—ñ–Ω—é—î–º–æ —Ö–æ—Å—Ç –Ω–∞ VITE_SITE_BASE_URL
 */
function buildCanonical({ lang, routePath, nodeFromNavTree, SITE_BASE_URL }) {
  // 1) –Ø–∫—â–æ —î –∫–∞–Ω–æ–Ω—ñ–∫–∞–ª —É –≤—É–∑–ª—ñ –¥–µ—Ä–µ–≤–∞ (3‚Äì4 —Ä—ñ–≤–Ω—ñ)
  const fromTree = nodeFromNavTree?.canonical_url?.[lang]; // –Ω–∞–ø—Ä. "http://localhost:5173/page/"
  if (fromTree) {
    // –õ–æ–≥–∏—Ä—É–µ–º —Å—ã—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É–∑–ª–æ–≤ 3-4 —É—Ä–æ–≤–Ω—è
    console.log(`üîç Raw canonical_url[${lang}] from navTree:`, fromTree);

    try {
      const base = new URL(SITE_BASE_URL);
      const url = new URL(fromTree, SITE_BASE_URL);
      // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ —Ö–æ—Å—Ç/–ø—Ä–æ—Ç–æ–∫–æ–ª –¥–æ –ø—Ä–æ–¥–æ–≤—Å—å–∫–æ–≥–æ BASE_URL
      url.protocol = base.protocol;
      url.hostname = base.hostname;
      url.port = base.port;
      // –ü—Ä–∏–±—Ä–∞—Ç–∏ –∑–∞–π–≤–∏–π —Å–ª–µ—à –≤ –∫—ñ–Ω—Ü—ñ
      let href = url.toString();
      if (href.endsWith("/")) href = href.slice(0, -1);

      // –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π canonical
      console.log(`‚úÖ Final canonical after normalization:`, href);

      return href;
    } catch (e) {
      console.warn(`‚ö†Ô∏è Failed to normalize canonical URL:`, e);
      // –Ø–∫—â–æ —á–æ–º—É—Å—å –Ω–µ–≤–¥–∞–ª–∏–π URL ‚Äî fallback –Ω–∏–∂—á–µ
    }
  }

  // 2) –Ü–Ω–∞–∫—à–µ (1‚Äì2 —Ä—ñ–≤–Ω—ñ, —á–∏—Å—Ç–∏–π —Ñ—Ä–æ–Ω—Ç): –∑ routePath
  // –û—á—ñ–∫—É—î–º–æ, —â–æ routePath ‚Äî —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö –±–µ–∑ –¥–æ–º–µ–Ω—É (–Ω–∞–ø—Ä. "ua/notarialni-poslugy" –∞–±–æ "notarialni-poslugy")
  // –Ø–∫—â–æ –º–æ–≤–Ω—ñ –ø—Ä–µ—Ñ—ñ–∫—Å–∏ —É —à–ª—è—Ö–∞—Ö, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–π –∫–æ—Ä–µ–∫—Ç–Ω–∏–π routePath –∑–≤–µ—Ä—Ö—É.
  const href = joinUrl(SITE_BASE_URL, routePath);
  const finalHref = href.endsWith("/") ? href.slice(0, -1) : href;

  console.log(`üìù Generated canonical from routePath:`, finalHref);
  console.log(`üìù RoutePath details:`, { routePath, lang, SITE_BASE_URL });

  return finalHref;
}

/**
 * Seo component
 * - title, description ‚Äî —è–∫ –±—É–ª–æ
 * - lang ‚Äî –ø–æ—Ç–æ—á–Ω–∞ –º–æ–≤–∞ ("ua" | "ru" | "en")
 * - routePath ‚Äî –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö (–±–µ–∑ –¥–æ–º–µ–Ω—É), –Ω–∞–ø—Ä. "ua/notarialni-poslugy"
 * - navTreeLoaded ‚Äî –∫–æ–ª–∏ –¥–µ—Ä–µ–≤–æ –≥–æ—Ç–æ–≤–µ (true) ‚Äî —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ –≤—Å—Ç–∞–≤–ª—è—î–º–æ canonical
 * - nodeFromNavTree ‚Äî –≤—É–∑–æ–ª –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–¥–ª—è 3‚Äì4 —Ä—ñ–≤–Ω—ñ–≤)
 * - ld (optional) ‚Äî –æ–±'—î–∫—Ç JSON-LD, —è–∫–∏–π –≤–æ–ª—å—î—Ç—å—Å—è –≤ <script type="application/ld+json">
 * - canonicalOverride (optional) ‚Äî —è–∫—â–æ –¥—É–∂–µ —Ç—Ä–µ–±–∞ –ø—Ä–∏–º—É—Å–æ–≤–æ –∑–∞–¥–∞—Ç–∏ canonical
 */
export default function Seo({
  title,
  description,
  lang,
  routePath,
  navTreeLoaded,
  nodeFromNavTree,
  ld,
  canonicalOverride,
}) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º SITE_BASE_URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
  const baseUrl = SITE_BASE_URL;

  // –ù–µ –≤—Å—Ç–∞–≤–ª—è—î–º–æ canonical, –¥–æ–∫–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ navTree (–≤–∞–∂–ª–∏–≤–æ!)
  console.log(`üîß Seo component called with:`, {
    navTreeLoaded,
    lang,
    routePath,
    nodeFromNavTree: nodeFromNavTree ? "exists" : "null",
    canonicalOverride: canonicalOverride || "none",
  });

  const canonical = canonicalOverride
    ? canonicalOverride
    : navTreeLoaded
      ? buildCanonical({
          lang,
          routePath,
          nodeFromNavTree,
          SITE_BASE_URL: baseUrl,
        })
      : null;

  console.log(`üéØ Final canonical:`, canonical);

  return (
    <Helmet>
      {title && <title>{title}</title>}
      {description && <meta name="description" content={description} />}

      {/* Canonical –¥–æ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –¥–µ—Ä–µ–≤–æ –≥–æ—Ç–æ–≤–µ */}
      {canonical && <link rel="canonical" href={canonical} data-rh="true" />}

      {/* –û–ø—Ü—ñ–π–Ω–æ JSON-LD */}
      {ld && <script type="application/ld+json">{JSON.stringify(ld)}</script>}
    </Helmet>
  );
}
