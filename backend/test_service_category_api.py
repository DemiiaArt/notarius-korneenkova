"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API ServiceCategory
–ó–∞–ø—É—Å–∫: python manage.py shell < test_service_category_api.py
"""

from main_page.models import ServiceCategory
from main_page.serializer import ServiceCategorySerializer
import json

print("=" * 80)
print("–ü–†–û–í–ï–†–ö–ê SERVICECATEGORY")
print("=" * 80)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
total = ServiceCategory.objects.count()
in_menu = ServiceCategory.objects.filter(show_in_menu=True).count()
root_cats = ServiceCategory.objects.filter(parent__isnull=True, show_in_menu=True)

print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print(f"   –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {total}")
print(f"   –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é: {in_menu}")
print(f"   –ö–æ—Ä–Ω–µ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {root_cats.count()}")

# 2. –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –º–µ–Ω—é
print(f"\nüìù –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–µ–Ω—é:")
for cat in ServiceCategory.objects.filter(show_in_menu=True).order_by('order'):
    indent = "  " * cat.level
    parent_info = f" (parent: {cat.parent.nav_id})" if cat.parent else " (ROOT)"
    print(f"   {indent}[{cat.kind}] {cat.nav_id}: {cat.label_ua}{parent_info}")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:")
if root_cats.exists():
    serializer = ServiceCategorySerializer(root_cats, many=True)
    data = serializer.data
    print(f"   –°–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–æ {len(data)} –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    
    # –í—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    if data:
        print(f"\nüìÑ –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        first = data[0]
        print(f"   ID: {first['id']}")
        print(f"   Kind: {first['kind']}")
        print(f"   Label UA: {first['label']['ua']}")
        print(f"   Slug UA: {first['slug']['ua']}")
        print(f"   Show in menu: {first['show_in_menu']}")
        print(f"   Children: {len(first['children'])} —à—Ç.")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–µ—Ç–∏, –ø–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤–æ–≥–æ
        if first['children']:
            child = first['children'][0]
            print(f"\n   –ü–µ—Ä–≤—ã–π –¥–æ—á–µ—Ä–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç:")
            print(f"      ID: {child['id']}")
            print(f"      Label UA: {child['label']['ua']}")
            print(f"      Children: {len(child['children'])} —à—Ç.")
    
    # –°–æ—Ö—Ä–∞–Ω–∏–º –≤ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    with open('service_categories_test.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ service_categories_test.json")
else:
    print("   ‚ö†Ô∏è  –ù–µ—Ç –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π!")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
print(f"\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:")
print("   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:")
print("   {")
print("     'id': 'nav_id',")
print("     'kind': 'page/group/section',")
print("     'label': {'ua': '...', 'ru': '...', 'en': '...'},")
print("     'slug': {'ua': '...', 'ru': '...', 'en': '...'},")
print("     'show_in_menu': True/False,")
print("     'component': None,")
print("     'children': [...]")
print("   }")

print("\n" + "=" * 80)
print("–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
print("=" * 80)

