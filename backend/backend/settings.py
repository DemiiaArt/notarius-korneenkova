"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')
if not SECRET_KEY:
    # Для Railway, если SECRET_KEY не установлен, используем временный ключ
    SECRET_KEY = 'django-insecure-temporary-key-for-railway-deployment'
    if os.getenv('DEBUG', 'False').lower() == 'true':
        print("WARNING: SECRET_KEY not set, using temporary key")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'

# Для Railway
ALLOWED_HOSTS = ['*']

# CSRF настройки для Railway
CSRF_TRUSTED_ORIGINS = [
    'https://notarius-korneenkova-production.up.railway.app',
    'https://*.railway.app',
    'https://*.up.railway.app',
    'http://127.0.0.1:8000',
    'http://localhost:8000',
]

# Дополнительные настройки для Railway
CSRF_COOKIE_SECURE = False  # Для Railway
SESSION_COOKIE_SECURE = False  # Для Railway
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_HTTPONLY = False
CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'Lax'

# Настройки для статических файлов
_static_dir = BASE_DIR / "static"
if _static_dir.exists():
    STATICFILES_DIRS = [
        _static_dir,
    ]
else:
    STATICFILES_DIRS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'whitenoise.runserver_nostatic',

    'mptt',
    'django_ckeditor_5',

    'main_page',
    'blog',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Настройка БД с поддержкой переменной DATABASE_URL (Railway) и PG* переменных
DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': os.getenv('POSTGRES_DB'),
                'USER': os.getenv('PGUSER', 'postgres'),
                'PASSWORD': os.getenv('PGPASSWORD', ''),
                'HOST': os.getenv('PGHOST', 'localhost'),
                'PORT': os.getenv('PGPORT', '5432'),
            }
        }




# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (User uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# CKEditor 5 settings — базовые инструменты текста и изображений
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading',
            '|',
            'bold', 'italic', 'underline', 'strikethrough', 'link',
            '|',
            'fontFamily', 'fontSize', 'fontColor', 'fontBackgroundColor',
            '|',
            'bulletedList', 'numberedList', 'outdent', 'indent',
            '|',
            'alignment', 'blockQuote', 'code', 'codeBlock', 'horizontalLine', 'removeFormat',
            '|',
            'imageUpload', 'insertTable', 'mediaEmbed'
        ],
        # Настройки шрифтов и размеров
        'fontFamily': {
            'options': [
                'default',
                'Montserrat, Arial, sans-serif',
                'Arial, Helvetica, sans-serif',
                'Times New Roman, Times, serif',
                'Georgia, serif',
                'Courier New, Courier, monospace',
            ],
            'supportAllValues': False,
        },
        'fontSize': {
            'options': [10, 12, 14, 16, 18, 20, 24, 30, 36],
            'supportAllValues': True,
        },
        'fontColor': {
            'columns': 6,
            'colors': [
                { 'color': '#111111', 'label': 'Black' },
                { 'color': '#ffffff', 'label': 'White' },
                { 'color': '#1E293B', 'label': 'Slate-900' },
                { 'color': '#0EA5E9', 'label': 'Sky' },
                { 'color': '#22C55E', 'label': 'Green' },
                { 'color': '#EF4444', 'label': 'Red' },
                { 'color': '#F59E0B', 'label': 'Amber' },
                { 'color': '#3B82F6', 'label': 'Blue' },
                { 'color': '#8B5CF6', 'label': 'Violet' },
                { 'color': '#F472B6', 'label': 'Pink' },
            ],
        },
        'fontBackgroundColor': {
            'columns': 6,
            'colors': [
                { 'color': '#000000', 'label': 'Black' },
                { 'color': '#ffffff', 'label': 'White' },
                { 'color': '#F1F5F9', 'label': 'Slate-50' },
                { 'color': '#E2E8F0', 'label': 'Slate-200' },
                { 'color': '#FEF9C3', 'label': 'Yellow-100' },
                { 'color': '#DCFCE7', 'label': 'Green-100' },
                { 'color': '#DBEAFE', 'label': 'Blue-100' },
                { 'color': '#FCE7F3', 'label': 'Pink-100' },
            ],
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'},
            ]
        },
        'image': {
            'toolbar': [
                'imageTextAlternative',
                'toggleImageCaption',
                'imageStyle:inline',
                'imageStyle:block',
                'imageStyle:side',
                'linkImage'
            ],
            'styles': ['inline', 'block', 'side']
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties'
            ]
        }
    },
}

if DEBUG:
    X_FRAME_OPTIONS = 'ALLOWALL'
else:
    # В продакшене ограничиваем фреймы текущим origin
    X_FRAME_OPTIONS = 'SAMEORIGIN'

CKEDITOR_5_UPLOAD_PATH = "uploads/"
CKEDITOR_5_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# WhiteNoise settings для статических файлов
# Используем ManifestStaticFilesStorage только в продакшене
if DEBUG:
    # Для локальной разработки используем простое хранилище
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
else:
    # Для продакшена используем с манифестом
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Настройки для Railway
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}